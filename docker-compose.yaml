services:
  api-service:
    build:
      context: ./APIService
      dockerfile: Dockerfile
    image: api-service-app
    container_name: api-service-app
    environment:
      DATA_SERVICE_BASE_URL: ${DATA_SERVICE_BASE_URL}
      DATA_SERVICE_PORT: ${DATA_SERVICE_PORT}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_POSTS_TOPIC: ${KAFKA_POSTS_TOPIC}
      KAFKA_COMMENTS_TOPIC: ${KAFKA_COMMENTS_TOPIC}
    ports:
      - 8080:8080    
    depends_on:
      - kafka
      - data-service
    networks:
      - network

  data-service:
    build:
      context: ./DataService
      dockerfile: Dockerfile
    image: data-service-app
    container_name: data-service-app
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_POSTS_TOPIC: ${KAFKA_POSTS_TOPIC}
      KAFKA_COMMENTS_TOPIC: ${KAFKA_COMMENTS_TOPIC}
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    expose:
      - ${DATA_SERVICE_PORT}
    depends_on:
      - postgres:
        condition: service_healthy
      - kafka
    networks:
      - network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}      
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    expose:
      - 9093
    command: >
      -c "sleep 30 &&
      kafka-topics --create --bootstrap-server kafka:9092 --partitions 2 --replication-factor 1 --topic ${KAFKA_POSTS_TOPIC} && 
      kafka-topics --create --bootstrap-server kafka:9092 --partitions 4 --replication-factor 1 --topic ${KAFKA_COMMENTS_TOPIC}"
    depends_on:
      - zookeeper
    networks:
      - network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  db-data: